{
  "hash": "1df0f06e9d17a4e49da06a00c88e2aac",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"5. List Challenge - Solution\"\n#draft: true\nauthor: \"Dr. Piccoli\"\nformat: live-html\npyodide:\n  packages:\n    - seaborn\neditor_options: \n  chunk_output_type: console\n---\n\n```{=html}\n<style>\n/* Target the first tab (Demo) */\n.nav-pills .nav-item:nth-child(1) .nav-link {\n  background-color: #FFC20A; /* Yellow */\n  color: white;\n}\n\n/* Target the second tab (Example) */\n.nav-pills .nav-item:nth-child(2) .nav-link {\n  background-color: #5D3A9B; /* Purple */\n  color: white;\n}\n\n/* Target the third tab (Exercise) */\n.nav-pills .nav-item:nth-child(3) .nav-link {\n  background-color: #0C7BDC; /* Blue */\n  color: white;\n}\n\n/* Target the fourth tab (Activity) */\n.nav-pills .nav-item:nth-child(4) .nav-link {\n  background-color: #E66100; /* Orange */\n  color: white;\n}\n\n/* Target the fifth tab (Activity2) */\n.nav-pills .nav-item:nth-child(5) .nav-link {\n  background-color: #40B0A6; /* teal */\n  color: white;\n}\n\n/* Active tab styling */\n.nav-pills .nav-link.active {\n  background-color: #2E7D32; /* Customize active tab color */\n  color: white;\n}\n</style>\n```\n\n::: {.cell}\n\n:::\n\n::: {.cell autorun='true' startover='false' edit='false' runbutton='false'}\n```{pyodide}\n#| autorun: true\n#| startover: false\n#| edit: false\n#| runbutton: false\n#| echo: false\nimport sys\nfrom io import StringIO\n\n```\n:::\n\n\n\n\nThis is a challenge that uses the skills you developed to this point, with particular attention to list manipulation\n\nThe task is to write a program that will compute the total amount a guest should pay by parsing an arbitrary restaurant check. The check, extracted from a point of sale, comes to you as a string with items, categories and amounts. You should extract the appropriate data and compute the sum total of what the guest spent. Keep food and drink items separate by printing two messages:\n\n`Total check value for food items is: $ [total value of all food items ordered]`\n\nand\n\n`Total check value for drink items is: $ [total value of all drink items ordered]`\n\nSince the data comes from a system, a Poing of Sale, you can be sure that its structure is fixed. You should ensure that your code works for a typical check, using the following sample:\n\n`data = 'chicken food$12.50;burger food$10.50;beer drink$5.00;wine drink$6.50'`\n\nYou should then make sure your code generalizes to the following test cases:\n\n`data = 'chicken food$12.50;burger food$10.50;beer drink$5.00;wine drink$6.50;soda drink$2.50;poke food$14.30'`\n\n`data = 'chicken food$12.50'`\n\n`data = ''`\n\n\n\n\n::: {.cell startover='false' autorun='false' min-lines='3'}\n```{pyodide}\n#| startover: false\n#| autorun: false\n#| min-lines: 3\n# Challenge 2 - List manipulation\ndata = 'chicken food$12.50;burger food$10.50;beer drink$5.00;wine drink$6.50'\n#data = 'chicken food$12.50;burger food$10.50;beer drink$5.00;wine drink$6.50;soda drink$2.50;poke food$14.30'\n#data = 'chicken food$12.50'\n#data = ''\n\ninput_list = data.split(\";\")\n\ntotal_food = 0\ntotal_drink = 0\nif data == '':\n  print('Nothing was ordered')\nelse:\n  for element in input_list:\n    category, value = element.split(\"$\",1)\n    category = category.split(\" \", 1)[1]\n    value = float(value)\n    if category == \"food\":\n      total_food += value\n    else:\n      total_drink += value\n  print('Total check value for food items is: $', total_food)\n  print('Total check value for drink items is: $', total_drink)\n\n\n# Challenge 2 - List manipulation (solution 2)\ndata = 'chicken food$12.50;burger food$10.50;beer drink$5.00;wine drink$6.50'\n#data = 'chicken food$12.50;burger food$10.50;beer drink$5.00;wine drink$6.50;soda drink$2.50;poke food$14.30'\n#data = 'chicken food$12.50'\n#data = ''\nbillItems = data.split(\";\")\nfoodTotal = 0\ndrinkTotal = 0\ntry:\n    for i in billItems:\n        if \"food\" in i:\n            foodPrice = i.split(\"$\")\n            foodTotal += float(foodPrice[1])\n        elif \"drink\" in i:\n            drinkPrice = i.split(\"$\")\n            drinkTotal += float(drinkPrice[1])\n    print(\"Total check value for food items is: $\", foodTotal)\n    print(\"Total check value for drink items is: $\", drinkTotal)\nexcept:\n    print(\"Error\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}